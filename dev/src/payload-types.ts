/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    categories: Category;
    'localized-posts': LocalizedPost;
    'nested-field-collection': NestedFieldCollection;
    posts: Post;
    tags: Tag;
    users: User;
    'crowdin-files': CrowdinFile;
    'crowdin-collection-directories': CrowdinCollectionDirectory;
    'crowdin-article-directories': CrowdinArticleDirectory;
  };
  globals: {
    nav: Nav;
  };
}
export interface Category {
  id: string;
  name?: string;
}
export interface LocalizedPost {
  id: string;
  title?: string;
  author?: string | User;
  publishedDate?: string;
  category?: string | Category;
  tags?: string[] | Tag[];
  content?: {
    [k: string]: unknown;
  }[];
  status?: 'draft' | 'published';
  crowdinArticleDirectory?: string | CrowdinArticleDirectory;
  updatedAt: string;
  createdAt: string;
}
export interface User {
  id: string;
  name?: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  salt?: string;
  hash?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password?: string;
}
export interface Tag {
  id: string;
  name?: string;
}
export interface CrowdinArticleDirectory {
  id: string;
  name?: string;
  crowdinCollectionDirectory?: string | CrowdinCollectionDirectory;
  crowdinFiles?: string[] | CrowdinFile[];
  createdAt: string;
  updatedAt: string;
  originalId?: number;
  projectId?: number;
  directoryId?: number;
  excludeLocales?: ('de_DE' | 'fr_FR')[];
}
export interface CrowdinCollectionDirectory {
  id: string;
  name?: string;
  title?: string;
  collectionSlug?: string;
  createdAt: string;
  updatedAt: string;
  originalId?: number;
  projectId?: number;
  directoryId?: number;
}
export interface CrowdinFile {
  id: string;
  title?: string;
  field?: string;
  crowdinArticleDirectory?: string | CrowdinArticleDirectory;
  createdAt: string;
  updatedAt: string;
  originalId?: number;
  projectId?: number;
  directoryId?: number;
  revisionId?: number;
  name?: string;
  type?: string;
  path?: string;
  fileData?: {
    json?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    html?: string;
  };
}
export interface NestedFieldCollection {
  id: string;
  textField?: string;
  richTextField?: {
    [k: string]: unknown;
  }[];
  textareaField?: string;
  arrayField?: {
    textField?: string;
    richTextField?: {
      [k: string]: unknown;
    }[];
    textareaField?: string;
    id?: string;
  }[];
  layout?: (
    | {
        textField?: string;
        richTextField?: {
          [k: string]: unknown;
        }[];
        textareaField?: string;
        id?: string;
        blockName?: string;
        blockType: 'basicBlock';
      }
    | {
        richTextField?: {
          [k: string]: unknown;
        }[];
        id?: string;
        blockName?: string;
        blockType: 'basicBlockRichText';
      }
    | {
        textField?: string;
        richTextField?: {
          [k: string]: unknown;
        }[];
        textareaField?: string;
        id?: string;
        blockName?: string;
        blockType: 'basicBlockMixed';
      }
    | {
        title?: string;
        messages?: {
          title?: string;
          message?: {
            [k: string]: unknown;
          }[];
          id?: string;
        }[];
        id?: string;
        blockName?: string;
        blockType: 'testBlockArrayOfRichText';
      }
  )[];
  group?: {
    textField?: string;
    richTextField?: {
      [k: string]: unknown;
    }[];
    textareaField?: string;
  };
  tabOneTitle?: string;
  tabOneContent?: {
    [k: string]: unknown;
  }[];
  tabTwo: {
    tabTwoTitle?: string;
    tabTwoContent?: {
      [k: string]: unknown;
    }[];
  };
  crowdinArticleDirectory?: string | CrowdinArticleDirectory;
  updatedAt: string;
  createdAt: string;
}
export interface Post {
  id: string;
  title?: string;
  author?: string | User;
  publishedDate?: string;
  category?: string | Category;
  tags?: string[] | Tag[];
  content?: {
    [k: string]: unknown;
  }[];
  status?: 'draft' | 'published';
  updatedAt: string;
  createdAt: string;
}
export interface Nav {
  id: string;
  items: {
    label?: string;
    id?: string;
  }[];
  crowdinArticleDirectory?: string | CrowdinArticleDirectory;
  updatedAt?: string;
  createdAt?: string;
}
